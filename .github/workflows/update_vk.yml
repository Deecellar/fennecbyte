name: Update vk.xml and Create Pull Request

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:

jobs:
  update-vkxml:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download Latest vk.xml
        run: |
          curl -o latest_vk.xml https://raw.githubusercontent.com/KhronosGroup/Vulkan-Docs/main/xml/vk.xml

      - name: Compare vk.xml
        id: compare-vkxml
        run: |
          if ! cmp -s latest_vk.xml vk.xml; then
            echo "vk.xml has changed."
            echo "::set-output name=changed::true"
          else
            echo "vk.xml is up to date."
            echo "::set-output name=changed::false"
          fi

      - name: Update vk.xml
        if: steps.compare-vkxml.outputs.changed == 'true'
        run: |
          mv latest_vk.xml vk.xml

      - name: if previous PR exists, add a commit to it instead of creating a new one otherwise create a new PR
        if: steps.compare-vkxml.outputs.changed == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pullRequests = await github.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: 'update-vkxml',
              base: 'master'
            });

            if (pullRequests.data.length > 0) {
              const pullRequest = pullRequests.data[0];
              const commits = await github.pulls.listCommits({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pullRequest.number
              });

              const commit = commits.data[0];
              const commitMessage = commit.commit.message;
              const commitSha = commit.sha;

              const updateVkXmlCommit = await github.git.createCommit({
                owner: context.repo.owner,
                repo: context.repo.repo,
                message: commitMessage,
                tree: commitSha,
                parents: [pullRequest.head.sha]
              });

              await github.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pullRequest.number,
                sha: updateVkXmlCommit.data.sha
              });
            } else {
              // We need to create a new branch called update-vkxml
              // and push the changes to it
              const newBranch = await github.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'refs/heads/update-vkxml',
                sha: context.sha
              });

              await github.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'Update vk.xml',
                head: 'update-vkxml',
                base: 'master',
                body: 'Update vk.xml'
              });
            }